openapi: 3.0.3 
info:
  title: Workflow Managemant Specification
  version: 1.0.0
  description: Workflow Managemant API specification

servers:
  - url: '{protocol}://{ip}:{port}/{base-api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        enum:
          - localhost
          - 34.199.12.114
        default: localhost
      port:
        enum:
          - '9000'
          - '5057'
        default: '9000'
      base-api:
        enum:
          - api
        default: api
tags: 
  - name: UseCase
    description: perform CRUD operations on Usecase Table
paths:
  
  /project/{id}/usecases:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Project
        - UseCase
      summary: Get all use cases for a project
      operationId: getProjectUsecases
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsecaseDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /usecase:
     post:
      tags:
        - UseCase
      summary: Add Usecase
      operationId: addUsecaseStage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsecaseDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"
  /usecase/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - UseCase
      summary: Fetch an Usecase of given id
      operationId: getUsecase
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    put:
      tags:
        - UseCase
      summary: Update Usecase
      operationId: updateUsecase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsecaseDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    delete:
      tags: 
        - UseCase
      summary: Delete Usecase of given id
      operationId: deleteUsecase
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsecaseDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /usecase/{usecaseId}/stages:
    parameters:
      - in: path
        name: usecaseId
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags: 
        - UseCase
        - Stage
      summary: Get all stages for a use case
      operationId: getUsecaseStages
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StageDTO'
        '404':
          description: "Service Not found"
        500:
          description: "Internal Server Error"


components:
  schemas:
    
    UsecaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string
        projectId:
           type: integer
           format: int64
           
    StageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description: 
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string  
        resourceId:
           type: integer
           format: int64  
        usecaseId:
          type: integer
          format: int64
    
           
    


